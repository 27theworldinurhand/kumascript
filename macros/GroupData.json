[
    {
        "Ambient Light Events": {
            "overview":   [ "Ambient Light Events"],
            "interfaces": [ "DeviceLightEvent" ],
            "methods":    [],
            "properties": [ "Window.ondevicelight" ],
            "events":     [ "Window: devicelight" ]
        },
        "Background Tasks": {
              "overview":     [ "Background Tasks API" ],
              "interfaces":   [ "IdleDeadline" ],
              "methods":      [ "Window.cancelIdleCallback()",
                                "Window.requestIdleCallback()" ],
              "properties":   [],
              "events":       []
        },
        "Battery API": {
             "overview":   [ "Battery Status API" ],
             "guides":     [ { "url":   "/Apps/Build/gather_and_modify_data/retrieving_battery_status_information",
                               "title": "Retrieving battery status information" } ],
             "interfaces": [ "BatteryManager" ],
             "methods":    [ "Navigator.getBattery()"],
             "properties": [ "Navigator.battery" ],
             "events":     []
        },
        "Beacon": {
            "overview":   [ "Beacon API" ],
            "interfaces": [ "Navigator",
                            "WorkerNavigator" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Broadcast Channel API": {
            "overview":   [ "Broadcast Channel API" ],
            "interfaces": [ "BroadcastChannel" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Bluetooth API": {
            "overview":   [ "Web Bluetooth API" ],
            "interfaces": [ "BluetoothAdvertisingData",
                            "BluetoothDevice",
                            "BluetoothGATTCharacteristic",
                            "BluetoothGATTDescriptor",
                            "BluetoothGATTRemoteServer",
                            "BluetoothGATTService" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Canvas API": {
            "overview":   [ "Canvas API" ],
            "interfaces": [ "Canvas",
                            "CanvasGradient",
                            "CanvasImageSource",
                            "CanvasPattern",
                            "CanvasRenderingContext2D",
                            "HTMLCanvasElement",
                            "ImageBitmap",
                            "ImageBitmapFactories",
                            "ImageBitmapRenderingContext",
                            "ImageData",
                            "OffscreenCanvas",
                            "Path2D",
                            "RenderingContext",
                            "TextMetrics" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Channel Messaging API": {
            "overview":   [ "Channel Messaging API" ],
            "interfaces": [ "MessageChannel",
                            "MessagePort",
                            "PortCollection" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Clipboard API": {
            "interfaces": [ "Clipboard",
                            "ClipboardEvent"],
            "dictionaries": [ "ClipboardPermissionDescriptor" ],
            "methods":    [],
            "properties": [ "Navigator.clipboard" ],
            "events":     [ "Window: clipboardchange",
                            "Element: copy",
                            "Element: cut",
                            "Element: paste" ]
        },
        "Console API": {
            "interfaces": [ "Console" ],
            "methods":    [],
            "properties": [ "Window.console",
                            "WorkerGlobalScope.console" ],
            "events":     []
        },
        "Credential Management API": {
            "overview":   [ "Credential Management API" ],
            "interfaces": [ "Credential",
                            "CredentialsContainer",
                            "FederatedCredential",
                            "PasswordCredential" ],
            "methods":     [],
            "properties":  [],
            "events":       []
        },
        "CSS Counter Styles": {
            "overview":   [ "CSS Counter Styles" ],
            "interfaces": [ "CSSCounterStyleRule" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "CSS Font Loading API": {
            "overview":   [ "CSS Font Loading API" ],
            "interfaces": [ "FontFace",
                            "FontFaceSet",
                            "FontFaceSource",
                            "FontFaceSetLoadEvent" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "CSSOM": {
            "overview":   [ "CSS Object Model" ],
            "interfaces": [ "AnimationEvent",
                            "CaretPosition",
                            "CSS",
                            "CSSConditionRule",
                            "CSSGroupingRule",
                            "CSSKeyframeRule",
                            "CSSKeyframesRule",
                            "CSSMediaRule",
                            "CSSNamespaceRule",
                            "CSSPageRule",
                            "CSSRule",
                            "CSSRuleList",
                            "CSSStyleDeclaration",
                            "CSSStyleRule",
                            "CSSStyleSheet",
                            "CSSSupportsRule",
                            "LinkStyle",
                            "MediaQueryList",
                            "MediaQueryListListener",
                            "Screen",
                            "StyleSheet",
                            "StyleSheetList",
                            "TransitionEvent" ],
            "methods":    [],
            "properties": [],
            "events":     [ "Document: scroll",
                            "Element: animationstart",
                            "Element: animationend",
                            "Element: animationiteration",
                            "Element: scroll",
                            "Element: transitionend",
                            "Window: resize" ]
        },
        "Device Orientation Events": {
            "guides":     [ { "url":   "/docs/Web/API/Detecting_device_orientation",
                              "title": "Detecting device orientation" } ],
            "interfaces": [ "DeviceAcceleration",
                            "DeviceMotionEvent",
                            "DeviceOrientationEvent",
                            "DeviceRotationRate" ],
            "methods":    [],
            "properties": [],
            "events":     [ "Window: deviceorientation",
                            "Window: compassneedscalibration",
                            "Window: devicemotion" ]
        },
        "DOM": {
            "overview":   [ "Document Object Model" ],
            "interfaces": [ "AbortController",
                            "AbortSignal",
                            "Attr",
                            "ByteString",
                            "CDATASection",
                            "CharacterData",
                            "ChildNode",
                            "CSSPrimitiveValue",
                            "CSSValue",
                            "CSSValueList",
                            "Comment",
                            "CustomEvent",
                            "Document",
                            "DocumentFragment",
                            "DocumentType",
                            "DOMConfiguration",
                            "DOMError",
                            "DOMErrorHandler",
                            "DOMException",
                            "DOMImplementation",
                            "DOMImplementationList",
                            "DOMImplementationRegistry",
                            "DOMImplementationSource",
                            "DOMLocator",
                            "DOMObject",
                            "DOMParser",
                            "DOMPoint",
                            "DOMPointInit",
                            "DOMPointReadOnly",
                            "DOMRect",
                            "DOMString",
                            "DOMTimeStamp",
                            "DOMTokenList",
                            "DOMUserData",
                            "Element",
                            "ElementTraversal",
                            "Entity",
                            "EntityReference",
                            "Event",
                            "EventTarget",
                            "HTMLCollection",
                            "MutationObserver",
                            "Node",
                            "NodeFilter",
                            "NodeIterator",
                            "NodeList",
                            "NonDocumentTypeChildNode",
                            "ProcessingInstruction",
                            "PromiseResolver",
                            "Range",
                            "Text",
                            "TextDecoder",
                            "TextEncoder",
                            "TimeRanges",
                            "TreeWalker",
                            "TypeInfo",
                            "UserDataHandler",
                            "USVString",
                            "XMLDocument" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "DOM (Non-standard)": {
            "interfaces": [ "DOMCursor",
                            "DOMRequest" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "DOM Events": {
            "interfaces": [ "Event",
                            "EventListener",
                            "EventTarget",
                            "CompositionEvent",
                            "FocusEvent",
                            "InputEvent",
                            "KeyboardEvent",
                            "MouseEvent",
                            "MouseScrollEvent",
                            "MouseWheelEvent",
                            "MutationEvent",
                            "ProgressEvent",
                            "UIEvent",
                            "WheelEvent" ],
            "methods":    [],
            "properties": [],
            "events":     [ "HTMLMediaElement: abort",
                            "HTMLElement: beforeinput",
                            "Element: blur",
                            "Element: click",
                            "Element: compositionstart",
                            "Element: compositionupdate",
                            "Element: compositionend",
                            "Element: dblclick",
                            "HTMLMediaElement: error",
                            "Element: focus",
                            "Element: focusin",
                            "Element: focusout",
                            "HTMLElement: input",
                            "Element: keydown",
                            "Element: keypress",
                            "Element: keyup",
                            "Window: load",
                            "Element: mousedown",
                            "Element: mouseenter",
                            "Element: mouseleave",
                            "Element: mousemove",
                            "Element: mouseout",
                            "Element: mouseover",
                            "Element: mouseup",
                            "Window: resize",
                            "Document: scroll",
                            "Element: select",
                            "Window: unload",
                            "Element: wheel" ]
        },
        "Encoding API": {
            "overview":   [ "Encoding API"],
            "interfaces": [ "TextDecoder",
                            "TextEncoder" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Encrypted Media Extensions": {
            "overview":   [ "Encrypted Media Extensions API" ],
            "interfaces": [ "MediaKeySessionEvent",
                            "MediaKeys",
                            "MediaKeySession",
                            "MediaKeyStatusMap",
                            "MediaKeySystemAccess",
                            "MediaKeySystemConfiguration" ],
            "methods":    [ "Navigator.requestMediaKeySystemAccess()",
                            "HTMLMediaElement.setMediaKeys()" ],
            "properties": [ "HTMLMediaElement.mediaKeys",
                            "HMTLMediaElement.onencrypted" ],
            "events":     []
        },
        "Fetch API": {
            "overview":   [ "Fetch API"],
            "interfaces": [ "Body",
                            "Headers",
                            "Request",
                            "Response" ],
            "methods":    [ "WindowOrWorkerGlobalScope.fetch()" ],
            "properties": [],
            "events":     []
        },
        "File API": {
            "guides":     [ { "url":   "/docs/Using_files_from_web_applications",
                              "title": "Using files from Web applications" },
                            { "url":   "/docs/Extensions/Using_the_DOM_File_API_in_chrome_code",
                              "title": "Using the DOM File API in chrome code" } ],
            "interfaces": [ "File",
                            "FileList",
                            "FileReader",
                            "FileReaderSync",
                            "Blob" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "File System API": {
            "overview":   [ "File and Directory Entries API" ],
            "interfaces": [ "FileError",
                            "FileException",
                            "FileHandle",
                            "FileRequest",
                            "FileSystemDirectoryEntry",
                            "FileSystemDirectoryEntrySync",
                            "FileSystemDirectoryReader",
                            "FileSystemDirectoryReaderSync",
                            "FileSystemEntry",
                            "FileSystemEntrySync",
                            "FileSystemFileEntry",
                            "FileSystemFileEntrySync",
                            "FileSystemFlags",
                            "FileSystem",
                            "FileSystemSync",
                            "HTMLInputElement",
                            "LocalFileSystem",
                            "LocalFileSystemSync",
                            "LockedFile",
                            "Metadata" ],
            "methods":    [ "Window.requestFileSystem()",
                            "Window.resolveLocalFileSystemURL()",
                            "WorkerGlobalScope.requestFileSystemSync()" ],
            "properties": [],
            "events":     []
        },
        "Fullscreen API": {
            "overview":   [ "Fullscreen API" ],
            "guides":     [],
            "interfaces": [],
            "dictionaries": [ "FullscreenOptions" ],
            "methods":    [ "Document.exitFullscreen()",
                            "Element.requestFullscreen()" ],
            "properties": [ "Document.fullscreen",
                            "DocumentOrShadowRoot.fullscreenElement",
                            "Document.onfullscreenchange",
                            "Document.onfullscreenerror",
                            "Element.onfullscreenchange",
                            "Element.onfullscreenerror" ],
            "events":     [ "Document: fullscreenchange",
                            "Document: fullscreenerror",
                            "Element: fullscreenchange",
                            "Element: fullscreenerror" ]
        },
        "Frame Timing API": {
            "overview":   [ "Frame Timing API" ],
            "interfaces": [ "Performance",
                            "PerformanceEntry",
                            "PerformanceFrameTiming",
                            "PerformanceObserver" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Gamepad API": {
            "overview":   [ "Gamepad API" ],
            "guides":     [ { "url":   "/docs/Games/Techniques/Controls_Gamepad_API",
                              "title": "Implementing controls using the Gamepad API" } ],
            "interfaces": [ "Gamepad",
                            "GamepadButton",
                            "GamepadEvent"],
            "methods":    [ "Navigator.getGamepads()" ],
            "properties": [ "Window.ongamepadconnected",
                            "Window.ongamepaddisconnected" ],
            "events":     [ "Window: gamepadconnected",
                            "Window: gamepaddisconnected" ]
        },
        "Geolocation API": {
            "guides":     [ { "url":   "/en-US/docs/Web/API/Geolocation/Using_geolocation",
                              "title": "Using geolocation" } ],
            "interfaces": [ "Coordinates",
                            "Geolocation",
                            "Position",
                            "PositionError",
                            "PositionOptions" ],
            "methods":    [],
            "properties": [ "Navigator.geolocation" ],
            "events":     []
        },
        "Geometry Interfaces": {
            "interfaces": [ "CSSMatrix",
                            "DOMMatrix",
                            "DOMMatrixReadOnly",
                            "Point" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "High Resolution Time": {
            "overview":   [ "Performance API" ],
            "interfaces": [ "PerformanceEntry",
                            "PerformanceMark",
                            "PerformanceMeasure",
                            "PerformanceNavigation",
                            "PerformanceResourceTiming",
                            "PerformanceTiming",
                            "DOMHighResTimeStamp" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "HTML DOM": {
            "interfaces": [ "BeforeUnloadEvent",
                            "DOMStringMap",
                            "ErrorEvent",
                            "GlobalEventHandlers",
                            "HashChangeEvent",
                            "ImageData",
                            "HTMLAnchorElement",
                            "HTMLAreaElement",
                            "HTMLAudioElement",
                            "HTMLBaseElement",
                            "HTMLBaseFontElement",
                            "HTMLBodyElement",
                            "HTMLBRElement",
                            "HTMLButtonElement",
                            "HTMLCanvasElement",
                            "HTMLContentElement",
                            "HTMLDataElement",
                            "HTMLDataListElement",
                            "HTMLDialogElement",
                            "HTMLDivElement",
                            "HTMLDListElement",
                            "HTMLDocument",
                            "HTMLElement",
                            "HTMLEmbedElement",
                            "HTMLFieldSetElement",
                            "HTMLFormControlsCollection",
                            "HTMLFormElement",
                            "HTMLFrameSetElement",
                            "HTMLHeadElement",
                            "HTMLHeadingElement",
                            "HTMLHRElement",
                            "HTMLHtmlElement",
                            "HTMLIFrameElement",
                            "HTMLImageElement",
                            "HTMLInputElement",
                            "HTMLIsIndexElement",
                            "HTMLKeygenElement",
                            "HTMLLabelElement",
                            "HTMLLegendElement",
                            "HTMLLIElement",
                            "HTMLLinkElement",
                            "HTMLMapElement",
                            "HTMLMediaElement",
                            "HTMLMetaElement",
                            "HTMLMeterElement",
                            "HTMLModElement",
                            "HTMLObjectElement",
                            "HTMLOListElement",
                            "HTMLOptGroupElement",
                            "HTMLOptionElement",
                            "HTMLOptionsCollection",
                            "HTMLOutputElement",
                            "HTMLParagraphElement",
                            "HTMLParamElement",
                            "HTMLPictureElement",
                            "HTMLPreElement",
                            "HTMLProgressElement",
                            "HTMLQuoteElement",
                            "HTMLScriptElement",
                            "HTMLSelectElement",
                            "HTMLShadowElement",
                            "HTMLSourceElement",
                            "HTMLSpanElement",
                            "HTMLStyleElement",
                            "HTMLTableCaptionElement",
                            "HTMLTableCellElement",
                            "HTMLTableColElement",
                            "HTMLTableDataCellElement",
                            "HTMLTableElement",
                            "HTMLTableHeaderCellElement",
                            "HTMLTableRowElement",
                            "HTMLTableSectionElement",
                            "HTMLTextAreaElement",
                            "HTMLTemplateElement",
                            "HTMLTimeElement",
                            "HTMLTitleElement",
                            "HTMLTrackElement",
                            "HTMLUListElement",
                            "HTMLUnknownElement",
                            "HTMLVideoElement",
                            "History",
                            "Location",
                            "MessageChannel",
                            "MessageEvent",
                            "MessagePort",
                            "Navigator",
                            "NavigatorGeolocation",
                            "NavigatorID",
                            "NavigatorLanguage",
                            "NavigatorOnLine",
                            "NavigatorPlugins",
                            "PageTransitionEvent",
                            "Plugin",
                            "PluginArray",
                            "PopStateEvent",
                            "PortCollection",
                            "PromiseRejectionEvent",
                            "RadioNodeList",
                            "Transferable",
                            "ValidityState",
                            "Window",
                            "WindowBase64",
                            "WindowEventHandlers",
                            "WindowTimers" ],
            "methods":    [],
            "properties": [],
            "events":     [ "Document: DOMContentLoaded",
                            "Document: readystatechange",
                            "Element: afterscriptexecute",
                            "Element: beforescriptexecute",
                            "Element: blur",
                            "Element: click",
                            "Element: contextmenu",
                            "Element: focus",
                            "Element: select",
                            "Element: show",
                            "HTMLDetailsElement: toggle",
                            "HTMLDialogElement: cancel",
                            "HTMLDialogElement: close",
                            "HTMLElement: input",
                            "HTMLFormElement: reset",
                            "HTMLFormElement: submit",
                            "HTMLInputElement: change",
                            "HTMLInputElement: invalid",
                            "HTMLMediaElement: abort",
                            "HTMLMediaElement: canplay",
                            "HTMLMediaElement: canplaythrough",
                            "HTMLMediaElement: durationchange",
                            "HTMLMediaElement: emptied",
                            "HTMLMediaElement: error",
                            "HTMLMediaElement: loadeddata",
                            "HTMLMediaElement: loadedmetadata",
                            "HTMLMediaElement: loadstart",
                            "HTMLMediaElement: play",
                            "HTMLMediaElement: playing",
                            "HTMLMediaElement: progress",
                            "HTMLMediaElement: seeked",
                            "HTMLMediaElement: seeking",
                            "HTMLMediaElement: stalled",
                            "HTMLMediaElement: suspend",
                            "HTMLMediaElement: timeupdate",
                            "HTMLMediaElement: volumechange",
                            "HTMLMediaElement: waiting",
                            "Window: afterprint",
                            "Window: beforeprint",
                            "Window: beforeunload",
                            "Window: hashchange",
                            "Window: languagechange",
                            "Window: load",
                            "Window: message",
                            "Window: offline",
                            "Window: online",
                            "Window: pagehide",
                            "Window: pageshow",
                            "Window: popstate",
                            "Window: rejectionhandled",
                            "Window: storage",
                            "Window: unload",
                            "Window: unhandledrejection" ]
        },
        "HTML Drag and Drop API": {
            "overview":   [ "HTML Drag and Drop API" ],
            "guides":     [ { "url":   "/en-US/docs/Web/Guide/HTML/Drag_and_drop",
                              "title": "Drag and drop" },
                            { "url":   "/en-US/docs/Web/Guide/HTML/Drag_operations",
                              "title": "Drag operations" }],
            "interfaces": [ "DataTransfer",
                            "DataTransferItem",
                            "DataTransferItemList",
                            "DragEvent" ],
            "methods":    [],
            "properties": [],
            "events":     [ "HTMLElement: dragstart",
                            "HTMLElement: drag",
                            "HTMLElement: dragenter",
                            "HTMLElement: dragexit",
                            "HTMLElement: dragleave",
                            "HTMLElement: dragover",
                            "HTMLElement: drop",
                            "HTMLElement: dragend" ]
        },
        "Image Capture API": {
            "overview": [ "MediaStream Image Capture API" ],
            "interfaces": [ "ImageCapture",
                            "PhotoCapabilities" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "IndexedDB": {
            "overview":   [ "IndexedDB API" ],
            "interfaces": [ "IDBCursor",
                            "IDBCursorSync",
                            "IDBCursorWithValue",
                            "IDBDatabase",
                            "IDBDatabaseException",
                            "IDBDatabaseSync",
                            "IDBEnvironment",
                            "IDBEnvironmentSync",
                            "IDBFactory",
                            "IDBFactorySync",
                            "IDBIndex",
                            "IDBIndexSync",
                            "IDBKeyRange",
                            "IDBObjectStore",
                            "IDBObjectStoreSync",
                            "IDBOpenDBRequest",
                            "IDBRequest",
                            "IDBTransaction",
                            "IDBTransactionSync",
                            "IDBVersionChangeEvent",
                            "IDBVersionChangeRequest" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Intersection Observer API": {
            "interfaces": [ "IntersectionObserver",
                            "IntersectionObserverEntry" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Long Tasks API": {
            "overview": [ "Long Tasks API" ],
            "interfaces": [ "PerformanceLongTaskTiming",
                            "TaskAttributionTiming" ],
            "methods":    [],
            "properties": [],
            "events":      []
        },
        "Media Capabilities API": {
            "overview":   [ "Media Capabilities API" ],
            "interfaces": [ "MediaCapabilities",
                            "ScreenLuminance",
                            "Screen",
                            "MediaCapabilitiesInfo" ],
            "methods":    [ "mediaCapabilities.decodingInfo()",
                            "mediaCapabilities.encodingInfo()"],
            "properties": [],
            "events":     [],
            "dictionaries": ["MediaConfiguration",
                            "VideoConfiguration",
                            "AudioConfiguration",
                            "MediaDecodingConfiguration",
                            "MediaEncodingConfiguration"]
        },
        "Media Capture and Streams": {
            "overview":   [ "Media Streams API" ],
            "guides":     [ { "url":   "/en-US/docs/Web/API/Media_Streams_API/Constraints",
                              "title": "Capabilities, constraints, and settings" } ],
            "interfaces": [ "AudioStreamTrack",
                            "BlobEvent",
                            "CanvasCaptureMediaStream",
                            "MediaDevices",
                            "MediaStream",
                            "MediaStreamTrack",
                            "MediaStreamTrackEvent",
                            "MediaTrackCapabilities",
                            "MediaTrackConstraints",
                            "MediaTrackSettings",
                            "MediaTrackSupportedConstraints",
                            "NavigatorUserMedia",
                            "NavigatorUserMediaError",
                            "VideoStreamTrack",
                            "DoubleRange",
                            "ConstrainDouble",
                            "LongRange",
                            "ConstrainLong",
                            "ConstrainBoolean",
                            "ConstrainDOMString" ],
            "methods":    [ "HTMLCanvasElement.captureStream()",
                            "navigator.mediaDevices.getUserMedia()" ],
            "properties": [ "Navigator.mediaDevices" ],
            "events":     [ "HTMLMediaElement: ended",
                            "HTMLMediaElement: ratechange" ]
        },
        "Media Session API": {
            "overview":   [ "Media Session API" ],
            "interfaces": [ "MediaMetadata",
                            "MediaSession"],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Media Source Extensions": {
            "overview": [ "Media Source Extensions API" ],
            "interfaces": [ "MediaSource",
                            "SourceBuffer",
                            "SourceBufferList",
                            "VideoPlaybackQuality",
                            "TrackDefault",
                            "TrackDefaultList" ],
            "methods":    [ "HTMLVideoElement.getVideoPlaybackQuality()",
                            "URL.createObjectURL()" ],
            "properties": [ "VideoTrack.sourceBuffer",
                            "TextTrack.sourceBuffer" ],
            "events":     []
        },
        "MediaStream Recording": {
            "overview":   [ "MediaStream Recording API" ],
            "interfaces": [ "MediaRecorder",
                            "MediaRecorderErrorEvent",
                            "BlobEvent" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Navigation Timing": {
            "overview":   [ "Navigation timing API" ],
            "interfaces": [ "Performance",
                            "PerformanceNavigation",
                            "PerformanceTiming",
                            "PerformanceNavigationTiming" ],
            "methods":    [],
            "properties": [ "Window.performance" ],
            "events":     []
        },
        "Network Information API": {
            "overview":   [ "Network Information API"],
            "interfaces": [ "NetworkInformation"],
            "methods":    [],
            "properties": [ "Navigator.connection" ],
            "events":     []
        },
        "Page Visibility API": {
            "overview":   [ "Page Visibility API" ],
            "interfaces": [],
            "methods":    [],
            "properties": [ "Document.hidden",
                            "Document.visibilityState" ],
            "events":     [ "Document: visibilitychange" ]
        },
        "Payment Request API": {
            "overview":   [ "Payment Request API" ],
            "interfaces": [ "MerchantValidationEvent",
                            "PaymentAddress",
                            "PaymentMethodChangeEvent",
                            "PaymentRequest",
                            "PaymentRequestUpdateEvent",
                            "PaymentResponse" ],
            "dictionaries": [ "AddressErrors",
                            "BasicCardRequest",
                            "BasicCardResponse",
                            "PaymentMethodData",
                            "PaymentCurrencyAmount",
                            "PaymentDetailsBase",
                            "PaymentDetailsModifier",
                            "PaymentDetailsUpdate",
                            "PaymentItem",
                            "PaymentOptions",
                            "PaymentShippingOption",
                            "PaymentShippingType" ],
            "methods":    [],
            "properties": ["HTMLIFrameElement.allowPaymentRequest"],
            "events":     []
        },
        "Performance API": {
            "overview":   [ "Performance API" ],
            "guides":     [ { "url": "/en-US/docs/Web/API/Frame_timing_API",
                              "title": "Frame Timing API" },
                            { "url": "/en-US/docs/Web/API/Long_Tasks_API",
                              "title": "Long Tasks API" },
                            { "url": "/en-US/docs/Web/API/Navigation_timing_API",
                              "title": "Navigation Timing API" },
                            { "url": "/en-US/docs/Web/API/Performance_Timeline",
                              "title": "Performance Timeline" },
                            { "url": "/en-US/docs/Web/API/Performance_Timeline/Using_Performance_Timeline",
                              "title": "Using Performance Timeline" },
                            { "url": "/en-US/docs/Web/API/Resource_Timing_API",
                              "title": "Resource Timing API" },
                            { "url": "/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API",
                              "title": "Using the Resource Timing API" },
                            { "url": "/en-US/docs/Web/API/User_timing_API",
                              "title": "User Timing API" } ],
            "interfaces": [ "Performance",
                            "PerformanceEntry",
                            "PerformanceFrameTiming",
                            "PerformanceLongTaskTiming",
                            "PerformanceMark",
                            "PerformanceMeasure",
                            "PerformanceNavigationTiming",
                            "PerformanceObserver",
                            "PerformanceResourceTiming",
                            "TaskAttributionTiming",
                            "Window.performance" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Performance Timeline API": {
            "overview":   [ "Performance Timeline" ],
            "interfaces": [ "Performance",
                            "PerformanceEntry",
                            "PerformanceObserver",
                            "PerformanceObserverEntryList",
                            "PerformanceResourceTiming" ],
            "methods":    [],
            "properties": [ "Window.performance" ],
            "events":     []
        },
        "Permissions API": {
            "overview":   [ "Permissions API" ],
            "interfaces": [ "Permissions",
                            "PermissionStatus" ],
            "methods":    [],
            "properties": [ "Navigator.permissions",
                            "WorkerNavigator.permissions"],
            "events":     []
        },
        "Pointer Events": {
            "overview":   [ "Pointer events" ],
            "interfaces": [ "PointerEvent"],
            "methods":    [ "Element.setPointerCapture()",
                            "Element.releasePointerCapture()" ],
            "properties": [ "Element.ongotpointercapture",
                            "Element.onlostpointercapture",
                            "GlobalEventHandlers.onpointerdown",
                            "GlobalEventHandlers.onpointermove",
                            "GlobalEventHandlers.onpointerup",
                            "GlobalEventHandlers.onpointercancel",
                            "GlobalEventHandlers.onpointerover",
                            "GlobalEventHandlers.onpointerout",
                            "GlobalEventHandlers.onpointerenter",
                            "GlobalEventHandlers.onpointerleave",
                            "Navigator.maxTouchPoints" ],
            "events":     [ "HTMLElement: pointerover",
                            "HTMLElement: pointerenter",
                            "HTMLElement: pointerdown",
                            "HTMLElement: pointermove",
                            "HTMLElement: pointerup",
                            "HTMLElement: pointercancel",
                            "HTMLElement: pointerout",
                            "HTMLElement: pointerleave",
                            "HTMLElement: gotpointercapture",
                            "HTMLElement: lostpointercapture"]
        },
        "Pointer Lock API": {
            "overview":   [ "Pointer Lock API" ],
            "interfaces": [],
            "methods":    [ "Element.requestPointerLock()",
                            "Document.exitPointerLock()" ],
            "properties": [ "Document.pointerLockElement",
                            "Document.onpointerlockchange",
                            "Document.onpointerlockerror" ],
            "events":     [ "Document: pointerlockchange",
                            "Document: pointerlockerror"]
        },
        "Presentation API": {
            "interfaces": [ "Presentation",
                            "PresentationAvailability",
                            "PresentationDeviceInfoManager",
                            "PresentationRequest",
                            "PresentationSession",
                            "PresentationSessionConnectEvent" ],
            "methods":    [],
            "properties": [ "Navigator.presentation",
                            "Navigator.mozPresentationDeviceInfo" ],
            "events":     []
        },
        "Proximity Events": {
            "overview":   [ "Proximity Events" ],
            "interfaces": [ "DeviceProximityEvent",
                            "UserProximityEvent" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Push API": {
            "overview":   [ "Push API" ],
            "interfaces": [ "PushManager",
                            "PushSubscription",
                            "PushEvent",
                            "PushMessageData" ],
            "methods":    [],
            "properties": [ "ServiceWorkerRegistration.pushManager",
                            "ServiceWorkerGlobalScope.onpush",
                            "ServiceWorkerGlobalScope.onpushsubscriptionchange" ],
            "events":     [ "ServiceWorkerGlobalScope: push",
                            "ServiceWorkerGlobalScope: pushsubscriptionchange" ]
        },
        "Resize Observer API": {
            "overview":   [ "Resize Observer API" ],
            "interfaces": [ "ResizeObservation",
                            "ResizeObserver",
                            "ResizeObserverEntry" ],
            "methods":    [],
            "properties": [],
            "events":     [],
            "callbacks":  [ "ResizeObserverCallback" ]
        },
        "Resource Timing API": {
            "overview":   [ "Resource Timing API" ],
            "interfaces": [ "Performance",
                            "PerformanceEntry",
                            "PerformanceResourceTiming" ],
            "methods":    [],
            "properties": [ "Window.performance" ],
            "events":     []
        },
        "Screen Capture API": {
            "guides":     [ { "url":   "/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture",
                              "title": "Using the Screen Capture API" }],
            "interfaces": [],
            "dictionaries": [],
            "methods":    [ "MediaDevices.getDisplayMedia()" ],
            "properties": [ "MediaTrackConstraints.cursor",
                            "MediaTrackConstraints.displaySurface",
                            "MediaTrackConstraints.logicalSurface",
                            "MediaTrackSettings.cursor",
                            "MediaTrackSettings.displaySurface",
                            "MediaTrackSettings.logicalSurface",
                            "MediaTrackSupportedConstraints.cursor",
                            "MediaTrackSupportedConstraints.displaySurface",
                            "MediaTrackSupportedConstraints.logicalSurface" ],
            "types":      [ "CursorCaptureConstraintSet",
                            "DisplayCaptureSurfaceType" ],
            "events":     []
        },
        "Screen Orientation API": {
            "guides":     [ { "url":   "/en-US/docs/Web/API/CSS_Object_Model/Managing_screen_orientation",
                              "title": "Managing screen orientation" } ],
            "interfaces": [ "ScreenOrientation" ],
            "methods":    [],
            "properties": [ "Screen.orientation"],
            "events":     []
        },
        "Selection API": {
            "interfaces": [ "Selection" ],
            "properties": [ "Document.onselectionchange",
                            "GlobalEventHandlers.onselectstart" ],
            "methods":    [ "Document.getSelection()",
                            "Window.getSelection()" ],
            "events":     [ "Document: selectionchange",
                            "Document: selectstart" ]
        },
        "Server Sent Events": {
            "overview":   [ "Server-sent events" ],
            "interfaces": [ "EventSource" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Service Workers API": {
            "overview":   [ "Service Worker API" ],
            "interfaces": [ "Cache",
                            "CacheStorage",
                            "Client",
                            "Clients",
                            "ExtendableEvent",
                            "FetchEvent",
                            "InstallEvent",
                            "NotificationEvent",
                            "PeriodicSyncEvent",
                            "PeriodicSyncManager",
                            "PeriodicSyncRegistration",
                            "ServiceWorker",
                            "ServiceWorkerContainer",
                            "ServiceWorkerGlobalScope",
                            "ServiceWorkerRegistration",
                            "SyncEvent",
                            "SyncManager",
                            "SyncRegistration",
                            "WindowClient" ],
            "methods":    [],
            "properties": [ "Navigator.serviceWorker" ],
            "events":     []
        },
        "Storage": {
            "overview":   [ "Storage API" ],
            "interfaces": [ "StorageManager",
                            "NavigatorStorage",
                            "StorageEstimate" ],
            "methods":    [],
            "properties": [ "Navigator.storage",
                            "WorkerNavigator.storage" ],
            "events":     []
        },
        "Streams": {
            "overview":   [ "Streams API" ],
            "interfaces": [ "ByteLengthQueuingStrategy",
                            "CountQueuingStrategy",
                            "ReadableByteStreamController",
                            "ReadableStream",
                            "ReadableStreamBYOBReader",
                            "ReadableStreamBYOBRequest",
                            "ReadableStreamDefaultController",
                            "ReadableStreamDefaultReader",
                            "WritableStream",
                            "WritableStreamDefaultController",
                            "WritableStreamDefaultWriter" ],
            "methods":    [ "WindowOrWorkerGlobalScope.fetch()" ],
            "properties": [ "Body.body" ],
            "events":     []
        },
        "SVG": {
            "interfaces": [ "SVGAElement",
                            "SVGAltGlyphElement",
                            "SVGAngle",
                            "SVGAnimateColorElement",
                            "SVGAnimatedAngle",
                            "SVGAnimatedBoolean",
                            "SVGAnimatedEnumeration",
                            "SVGAnimatedInteger",
                            "SVGAnimatedLength",
                            "SVGAnimatedLengthList",
                            "SVGAnimatedNumber",
                            "SVGAnimatedNumberList",
                            "SVGAnimatedPathData",
                            "SVGAnimatedPoints",
                            "SVGAnimatedPreserveAspectRatio",
                            "SVGAnimatedRect",
                            "SVGAnimatedString",
                            "SVGAnimatedTransformList",
                            "SVGAnimateElement",
                            "SVGAnimateMotionElement",
                            "SVGAnimateTransformElement",
                            "SVGAnimationElement",
                            "SVGCircleElement",
                            "SVGClipPathElement",
                            "SVGComponentTransferFunctionElement",
                            "SVGCursorElement",
                            "SVGDefsElement",
                            "SVGDescElement",
                            "SVGDocument",
                            "SVGElement",
                            "SVGEllipseElement",
                            "SVGFEBlendElement",
                            "SVGFEColorMatrixElement",
                            "SVGFEComponentTransferElement",
                            "SVGFECompositeElement",
                            "SVGFEConvolveMatrixElement",
                            "SVGFEDiffuseLightingElement",
                            "SVGFEDisplacementMapElement",
                            "SVGFEDistantLightElement",
                            "SVGFEDropShadowElement",
                            "SVGFEFloodElement",
                            "SVGFEFuncAElement",
                            "SVGFEFuncBElement",
                            "SVGFEFuncGElement",
                            "SVGFEFuncRElement",
                            "SVGFEGaussianBlurElement",
                            "SVGFEImageElement",
                            "SVGFEMergeElement",
                            "SVGFEMergeNodeElement",
                            "SVGFEMorphologyElement",
                            "SVGFEOffsetElement",
                            "SVGFEPointLightElement",
                            "SVGFESpecularLightingElement",
                            "SVGFESpotLightElement",
                            "SVGFETileElement",
                            "SVGFETurbulenceElement",
                            "SVGFilterElement",
                            "SVGFilterPrimitiveStandardAttributes",
                            "SVGFitToViewBox",
                            "SVGFontElement",
                            "SVGFontFaceElement",
                            "SVGFontFaceFormatElement",
                            "SVGFontFaceNameElement",
                            "SVGFontFaceSrcElement",
                            "SVGFontFaceUriElement",
                            "SVGForeignObjectElement",
                            "SVGGElement",
                            "SVGGlyphElement",
                            "SVGGradientElement",
                            "SVGGraphicsElement",
                            "SVGMarkerElement",
                            "SVGHKernElement",
                            "SVGImageElement",
                            "SVGLength",
                            "SVGLengthList",
                            "SVGLinearGradientElement",
                            "SVGLineElement",
                            "SVGMaskElement",
                            "SVGMatrix",
                            "SVGMetadataElement",
                            "SVGMissingGlyphElement",
                            "SVGMPathElement",
                            "SVGNumber",
                            "SVGNumberList",
                            "SVGPathElement",
                            "SVGPathSeg",
                            "SVGPathSegClosePath",
                            "SVGPathSegMovetoAbs",
                            "SVGPathSegMovetoRel",
                            "SVGPathSegLinetoAbs",
                            "SVGPathSegLinetoRel",
                            "SVGPathSegCurvetoCubicAbs",
                            "SVGPathSegCurvetoCubicRel",
                            "SVGPathSegCurvetoQuadraticAbs",
                            "SVGPathSegCurvetoQuadraticRel",
                            "SVGPathSegArcAbs",
                            "SVGPathSegArcRel",
                            "SVGPathSegLinetoHorizontalAbs",
                            "SVGPathSegLinetoHorizontalRel",
                            "SVGPathSegLinetoVerticalAbs",
                            "SVGPathSegLinetoVerticalRel",
                            "SVGPathSegCurvetoCubicSmoothAbs",
                            "SVGPathSegCurvetoCubicSmoothRel",
                            "SVGPathSegCurvetoQuadraticSmoothAbs",
                            "SVGPathSegCurvetoQuadraticSmoothRel",
                            "SVGPathSegList",
                            "SVGPatternElement",
                            "SVGPoint",
                            "SVGPointList",
                            "SVGPolygonElement",
                            "SVGPolylineElement",
                            "SVGPreserveAspectRatio",
                            "SVGRadialGradientElement",
                            "SVGRect",
                            "SVGRectElement",
                            "SVGScriptElement",
                            "SVGSetElement",
                            "SVGStopElement",
                            "SVGStringList",
                            "SVGStylable",
                            "SVGStyleElement",
                            "SVGSVGElement",
                            "SVGSwitchElement",
                            "SVGSymbolElement",
                            "SVGTests",
                            "SVGTextContentElement",
                            "SVGTextElement",
                            "SVGTextPathElement",
                            "SVGTextPositioningElement",
                            "SVGTitleElement",
                            "SVGTransform",
                            "SVGTransformable",
                            "SVGTransformList",
                            "SVGTRefElement",
                            "SVGTSpanElement",
                            "SVGUnitTypes",
                            "SVGURIReference",
                            "SVGUseElement",
                            "SVGViewElement",
                            "SVGVKernElement",
                            "SVGZoomAndPan",
                            "SVGZoomEvent",
                            "TimeEvent" ],
            "methods":    [],
            "properties": [],
            "events":     [ "Element: focusin",
                            "Element: focusout",
                            "Element: activate",
                            "Element: click",
                            "Element: mousedown",
                            "Element: mouseup",
                            "Element: mouseover",
                            "Element: mousemove",
                            "Element: mouseout" ]
        },
        "Touch Events": {
            "overview":   [ "Touch events" ],
            "interfaces": [ "Touch",
                            "TouchEvent",
                            "TouchList" ],
            "methods":    [],
            "properties": [],
            "events":     [ "Element: touchstart",
                            "Element: touchend",
                            "Element: touchmove",
                            "Element: touchcancel" ]
        },
        "URL API": {
            "interfaces": [ "URL",
                            "URLSearchParams",
                            "HTMLHyperlinkElementUtils",
                            "URLUtilsReadOnly" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "User Timing API": {
            "interfaces": [ "Performance",
                            "PerformanceEntry",
                            "PerformanceMark",
                            "PerformanceMeasure" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Vibration API": {
            "overview":   [ "Vibration API" ],
            "interfaces": [],
            "methods":    [ "Navigator.vibrate()" ],
            "properties": [],
            "events":     []
        },
        "Web Animations": {
            "overview":   [ "Web Animations API" ],
            "interfaces": [ "Animation",
                            "AnimationEffect",
                            "AnimationEvent",
                            "AnimationTimeline",
                            "AnimationPlaybackEvent",
                            "DocumentTimeline",
                            "EffectTiming",
                            "KeyframeEffect" ],
            "methods":    [ "Document.getAnimations()",
                            "Element.animate()"],
            "properties": [ "Document.timeline" ],
            "events":     [  ]
        },
        "Web Audio API": {
            "guides": [ ],
            "overview":   [ "Web Audio API" ],
            "interfaces": [ "AnalyserNode",
                            "AudioBuffer",
                            "AudioBufferSourceNode",
                            "AudioContext",
                            "AudioContextOptions",
                            "AudioDestinationNode",
                            "AudioListener",
                            "AudioNode",
                            "AudioNodeOptions",
                            "AudioParam",
                            "AudioProcessingEvent",
                            "AudioScheduledSourceNode",
                            "BaseAudioContext",
                            "BiquadFilterNode",
                            "ChannelMergerNode",
                            "ChannelSplitterNode",
                            "ConstantSourceNode",
                            "ConvolverNode",
                            "DelayNode",
                            "DynamicsCompressorNode",
                            "GainNode",
                            "IIRFilterNode",
                            "MediaElementAudioSourceNode",
                            "MediaStreamAudioDestinationNode",
                            "MediaStreamAudioSourceNode",
                            "OfflineAudioCompletionEvent",
                            "OfflineAudioContext",
                            "OscillatorNode",
                            "PannerNode",
                            "PeriodicWave",
                            "WaveShaperNode",
                            "StereoPannerNode" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Web Authentication API": {
            "overview":   [ "Web Authentication API" ],
            "interfaces": [ "CredentialsContainer",
                            "PublicKeyCredential",
                            "AuthenticatorResponse",
                            "AuthenticatorAttestationResponse",
                            "AuthenticatorAssertionResponse" ],
            "methods":    [],
            "properties": [],
            "events":     [],
            "dictionaries": ["PublicKeyCredentialRequestOptions",
                             "PublicKeyCredentialCreationOptions"]
        },
        "Web Components": {
            "guides":       [
                              { "url":   "/docs/Web/Web_Components/Using_custom_elements",
                                "title": "Using custom elements" },
                              { "url":   "/docs/Web/Web_Components/Using_shadow_DOM",
                                "title": "Using shadow DOM" },
                              { "url":   "/docs/Web/Web_Components/Using_templates_and_slots",
                                "title": "Using templates and slots" }
                            ],
            "interfaces":   [ "CustomElementRegistry",
                              "HTMLSlotElement",
                              "HTMLTemplateElement",
                              "ShadowRoot",
                              "DocumentOrShadowRoot",
                              "Slotable" ],
            "methods":      [ "Document.createElement()",
                              "Element.attachShadow()",
                              "Node.getRootNode()" ],
            "properties":   [ "Element.shadowRoot",
                              "Element.slot",
                              "Event.composed",
                              "Event.composedPath",
                              "Node.isConnected",
                              "Window.customElements" ],
            "events":     []
        },
        "Web Crypto API": {
            "overview":     [ "Web Crypto API" ],
            "interfaces":   [ "Crypto",
                              "CryptoKey",
                              "CryptoKeyPair",
                              "RandomSource",
                              "SubtleCrypto" ],
            "methods":      [],
            "properties":   [ "Window.crypto" ],
            "events":       [],
            "dictionaries": [ "AesCbcParams",
                              "AesCtrParams",
                              "AesGcmParams",
                              "AesKeyGenParams",
                              "EcKeyGenParams",
                              "EcKeyImportParams",
                              "EcdhKeyDeriveParams",
                              "EcdsaParams",
                              "HkdfParams",
                              "HmacImportParams",
                              "HmacKeyGenParams",
                              "Pbkdf2Params",
                              "RsaHashedImportParams",
                              "RsaHashedKeyGenParams",
                              "RsaOaepParams",
                              "RsaPssParams" ]
        },
        "WebGL": {
            "overview": [ "WebGL API" ],
            "interfaces": [ "WebGLRenderingContext",
                            "WebGLBuffer",
                            "WebGLFramebuffer",
                            "WebGLRenderbuffer",
                            "WebGLObject",
                            "WebGLProgram",
                            "WebGLShader",
                            "WebGLTexture",
                            "WebGLUniformLocation",
                            "WebGLActiveInfo",
                            "WebGLShaderPrecisionFormat",
                            "WebGLContextEvent",
                            "WebGLQuery",
                            "WebGLSampler",
                            "WebGLSync",
                            "WebGLTransformFeedback",
                            "WebGLVertexArrayObject",
                            "WebGL2RenderingContext",
                            "WEBGL_compressed_texture_s3tc",
                            "WEBGL_compressed_texture_s3tc_srgb",
                            "WEBGL_compressed_texture_atc",
                            "WEBGL_compressed_texture_etc1",
                            "WEBGL_compressed_texture_pvrtc",
                            "WEBGL_debug_renderer_info",
                            "WEBGL_debug_shaders",
                            "WEBGL_depth_texture",
                            "OES_element_index_uint",
                            "EXT_frag_depth",
                            "WEBGL_lose_context",
                            "EXT_texture_filter_anisotropic",
                            "EXT_sRGB",
                            "OES_standard_derivatives",
                            "OES_texture_float",
                            "WEBGL_draw_buffers",
                            "OES_texture_float_linear",
                            "EXT_shader_texture_lod",
                            "OES_texture_half_float",
                            "OES_texture_half_float_linear",
                            "WEBGL_color_buffer_float",
                            "EXT_color_buffer_half_float",
                            "OES_vertex_array_object",
                            "ANGLE_instanced_arrays",
                            "EXT_blend_minmax",
                            "EXT_disjoint_timer_query" ],
            "methods":    [],
            "properties": [],
            "events":     [ "HTMLCanvasElement: webglcontextlost",
                            "HTMLCanvasElement: webglcontextrestored",
                            "HTMLCanvasElement: webglcontextcreationerror" ]
        },
        "Web MIDI API": {
            "interfaces": [ "MIDIInputMap",
                            "MIDIOutputMap",
                            "MIDIAccess",
                            "MIDIPort",
                            "MIDIInput",
                            "MIDIOutput",
                            "MIDIMessageEvent",
                            "MIDIConnectionEvent" ],
            "methods":    [ "Navigator.requestMIDIAccess()"],
            "properties": [],
            "events":     []
        },
        "Web Notifications": {
            "overview":   [ "Notifications API" ],
            "interfaces": [ "Notification",
                            "NotificationEvent" ],
            "methods":    [ "ServiceWorkerRegistration.showNotification()",
                            "ServiceWorkerRegistration.getNotifications()" ],
            "properties": [ "ServiceWorkerGlobalScope.onnotificationclick"],
            "events":     []
        },
        "WebRTC": {
            "overview":   [ "WebRTC API" ],
            "guides":     [ { "url":   "/en-US/docs/Web/API/WebRTC_API/Protocols",
                              "title": "Introduction to WebRTC protocols" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Connectivity",
                              "title": "WebRTC connectivity" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Session_lifetime",
                              "title": "Lifetime of a WebRTC session" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling",
                              "title": "Signaling and video calling" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Using_data_channels",
                              "title": "Using WebRTC data channels" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Using_DTMF",
                              "title": "Using DTMF with WebRTC" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/adapter.js",
                              "title": "Improving compatibility using WebRTC adapter.js" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Taking_still_photos",
                              "title": "Taking still photos with WebRTC" },
                            { "url":   "/en-US/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample",
                              "title": "A simple RTCDataChannel example" } ],
            "interfaces": [ "RTCPeerConnection",
                            "RTCSessionDescription",
                            "RTCIceCandidate",
                            "RTCPeerConnectionIceEvent",
                            "RTCPeerConnectionIceErrorEvent",
                            "RTCCertificate",
                            "RTCRtpSender",
                            "RTCRtpReceiver",
                            "RTCRtpTransceiver",
                            "RTCDtlsTransport",
                            "RTCIceTransport",
                            "RTCTrackEvent",
                            "RTCSctpTransport",
                            "RTCDataChannel",
                            "RTCDataChannelEvent",
                            "RTCDTMFSender",
                            "RTCDTMFToneChangeEvent",
                            "RTCStatsReport",
                            "RTCStatsEvent",
                            "RTCErrorEvent" ],
            "dictionaries": [ "RTCConfiguration",
                            "RTCOAuthCredential",
                            "RTCIceServer",
                            "RTCOfferAnswerOptions",
                            "RTCOfferOptions",
                            "RTCAnswerOptions",
                            "RTCSessionDescriptionInit",
                            "RTCIceCandidateInit",
                            "RTCPeerConnectionIceEventInit",
                            "RTCPeerConnectionIceErrorEventInit",
                            "RTCCertificateExpiration",
                            "RTCRtpTransceiverInit",
                            "RTCRtpParameters",
                            "RTCRtpSendParameters",
                            "RTCRtpReceiveParameters",
                            "RTCRtpCodingParameters",
                            "RTCRtpDecodingParameters",
                            "RTCRtpEncodingParameters",
                            "RTCRtcpParameters",
                            "RTCRtpHeaderExtensionParameters",
                            "RTCRtpCodecParameters",
                            "RTCRtpCapabilities",
                            "RTCRtpCodecCapability",
                            "RTCRtpHeaderExtensionCapability",
                            "RTCRtpContributingSource",
                            "RTCRtpSynchronizationSource",
                            "RTCDtlsFingerprint",
                            "RTCIceParameters",
                            "RTCIceCandidatePair",
                            "RTCTrackEventInit",
                            "RTCDataChannelInit",
                            "RTCDataChannelEventInit",
                            "RTCDTMFToneChangeEventInit",
                            "RTCStats",
                            "RTCStatsEventInit",
                            "RTCErrorEventInit",
                            "RTCRtpStreamStats",
                            "RTCCodecStats",
                            "RTCReceivedRtpStreamStats",
                            "RTCInboundRtpStreamStats",
                            "RTCRemoteInboundRtpStreamStats",
                            "RTCSentRtpStreamStats",
                            "RTCOutboundRtpStreamStats",
                            "RTCRemoteOutboundRtpStreamStats",
                            "RTCRtpContributingSourceStats",
                            "RTCPeerConnectionStats",
                            "RTCMediaStreamStats",
                            "RTCMediaHandlerStats",
                            "RTCVideoHandlerStats",
                            "RTCVideoSenderStats",
                            "RTCSenderVideoTrackAttachmentStats",
                            "RTCVideoReceiverStats",
                            "RTCAudioHandlerStats",
                            "RTCAudioSenderStats",
                            "RTCSenderAudioTrackAttachmentStats",
                            "RTCAudioReceiverStats",
                            "RTCDataChannelStats",
                            "RTCTransportStats",
                            "RTCIceCandidateStats",
                            "RTCIceCandidatePairStats",
                            "RTCCertificateStats",
                            "RTCRTPStreamStats" ],
            "types":      [ "RTCIceCredentialType",
                            "RTCIceTransportPolicy",
                            "RTCBundlePolicy",
                            "RTCRtcpMuxPolicy",
                            "RTCSignalingState",
                            "RTCIceGatheringState",
                            "RTCPeerConnectionState",
                            "RTCIceConnectionState",
                            "RTCSdpType",
                            "RTCIceProtocol",
                            "RTCIceTcpCandidateType",
                            "RTCIceCandidateType",
                            "RTCPriorityType",
                            "RTCRtpTransceiverDirection",
                            "RTCDtxStatus",
                            "RTCDegradationPreference",
                            "RTCDtlsTransportState",
                            "RTCIceGathererState",
                            "RTCIceTransportState",
                            "RTCIceRole",
                            "RTCIceComponent",
                            "RTCSctpTransportState",
                            "RTCDataChannelState",
                            "RTCErrorDetailType",
                            "RTCStatsType",
                            "RTCCodecType",
                            "RTCQualityLimitationReason",
                            "RTCNetworkType",
                            "RTCStatsIceCandidatePairState" ],
            "methods":    [ "MediaDevices.getUserMedia()"],
            "properties": [ "Navigator.mediaDevices" ],
            "events":     [],
            "callbacks":  [ "RTCPeerConnectionErrorCallback",
                            "RTCSessionDescriptionCallback" ]
        },
        "Websockets API": {
            "overview":   [ "Websockets API" ],
            "interfaces": [ "WebSocket",
                            "CloseEvent",
                            "MessageEvent" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Web Speech API": {
            "interfaces": [ "SpeechGrammar",
                            "SpeechGrammarList",
                            "SpeechRecognition",
                            "SpeechRecognitionAlternative",
                            "SpeechRecognitionError",
                            "SpeechRecognitionEvent",
                            "SpeechRecognitionResult",
                            "SpeechRecognitionResultList",
                            "SpeechSynthesis",
                            "SpeechSynthesisErrorEvent",
                            "SpeechSynthesisEvent",
                            "SpeechSynthesisUtterance",
                            "SpeechSynthesisVoice" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "Web Storage API": {
            "overview":   [ "Web Storage API" ],
            "interfaces": [ "Storage",
                            "StorageEvent" ],
            "methods":    [],
            "properties": [ "Window.sessionStorage",
                            "Window.localStorage" ],
            "events":     [ "Window: storage" ]
        },
        "Web Workers API": {
            "overview":   [ "Web Workers API" ],
            "interfaces": [ "AbstractWorker",
                            "ChromeWorker",
                            "DedicatedWorkerGlobalScope",
                            "ServiceWorker",
                            "SharedWorker",
                            "SharedWorkerGlobalScope",
                            "Worker",
                            "WorkerGlobalScope",
                            "WorkerLocation",
                            "WorkerNavigator" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "WebVR API": {
            "overview":   [ "WebVR API" ],
            "guides":     [ { "url":   "/en-US/docs/Web/API/WebVR_API/Using_the_WebVR_API",
                              "title": "Using the WebVR API" },
                            { "url":   "/en-US/docs/Web/API/WebVR_API/Concepts",
                              "title": "WebVR concepts" },
                            { "url":   "/en-US/docs/Web/API/WebVR_API/Using_VR_controllers_with_WebVR",
                              "title": "Using VR controllers with WebVR" }],
            "interfaces": [ "VRDisplay",
                            "VRDisplayCapabilities",
                            "VRDisplayEvent",
                            "VRFrameData",
                            "VRPose",
                            "VREyeParameters",
                            "VRFieldOfView",
                            "VRLayerInit",
                            "VRStageParameters" ],
            "methods":    [ "Navigator.getVRDisplays()" ],
            "properties": [ "Gamepad.displayId",
                            "Navigator.activeVRDisplays" ],
            "events":     [ "Window: vrdisplayconnected",
                            "Window: vrdisplaydisconnected",
                            "Window: vrdisplayactivate",
                            "Window: vrdisplaydeactivate",
                            "Window: vrdisplayblur",
                            "Window: vrdisplayfocus",
                            "Window: vrdisplaypresentchange" ]
        },
        "WebVTT": {
            "overview": [ "WebVTT API" ],
            "guides":     [ { "url":   "/docs/Web/API/Web_Video_Text_Tracks_Format",
                              "title": "WebVTT file format" } ],
            "interfaces": [ "VTTCue",
                            "VTTRegion",
                            "TextTrack",
                            "TextTrackCue",
                            "TextTrackCueList",
                            "TextTrackList",
                            "TrackEvent" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "XDomain": {
            "interfaces": [ "XDomainrequest" ],
            "methods":    [],
            "properties": [],
            "events":     []
        },
        "XMLHttpRequest": {
            "guides":     [ { "url":   "/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest",
                              "title": "Using XMLHttpRequest" },
                            { "url":   "/docs/Web/API/XMLHttpRequest/HTML_in_XMLHttpRequest",
                              "title": "HTML in XMLHttpRequest" },
                            { "url":   "/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest_in_IE6",
                              "title": "Using XMLHttpRequest in IE6" },
                            { "url":   "/docs/XMLHttpRequest_changes_for_Gecko1.8",
                              "title": "XMLHttpRequest changes for Gecko 1.8"} ],
            "interfaces": [ "FormData",
                            "XMLHttpRequest",
                            "XMLHttpRequestEventTarget",
                            "XMLHttpRequestUpload" ],
            "methods":    [],
            "properties": [],
            "events":     []
        }
    }
]
